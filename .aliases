### ALIASES ################################################

# Terminal
alias cls="clear"
alias diff="colordiff"
alias update="sudo apt-get update && sudo apt-get upgrade -y"
alias lt="tree -ad -L 2"
alias sql="mysql -uroot -p"
alias p="vendor/bin/phpunit"
alias rm="rm -I"
alias lesslast="ls -t | head -1 | xargs less"
alias grepctx="grep -C 1 -Ri "
alias grepi="grep -i" 
alias fd="fd -L"

# Git
alias nah="git reset --hard;git clean -df;"

# Django Dev
alias dsource="source env/bin/activate"
alias dmanage="python manage.py"

# Magento
alias p="../vendor/bin/phpunit"
alias pf="../vendor/bin/phpunit --filter "
alias pg="../vendor/bin/phpunit --group "
alias p5="phpunit5"
alias p5f="phpunit5 --filter "
alias p5g="phpunit5 --group "
alias Log="cd var/log"

# PHP 
# (OsX-specific)
alias php71="/opt/php-7.1/bin/php"
alias php56="/opt/php-5.6.30/bin/php"

# Create the tags to work with Vim + CtrlP
alias createtags='ctags -R --PHP-kinds=cfi --regex-php="/^[ \t]*trait[ \t]+([a-z0_9_]+)/\1/t,traits/i"'

### FUNCTIONS ##############################################

# Copy the content of a file to the clipboard
function copy {
    if [ "$1" != "" ]
    then
        xclip -sel c < "$1"
        echo "The content of $1 was copied to the clipboard."
    else
        echo "You must specify a file to copy its content to the clipboard."
    fi
}

# Copy the absolute path of a file
function cpath {
    if [ "$1" != "" ]; then
        readlink -f "$1" | xclip -sel c
    else
        readlink -f . | xclip -sel c
    fi
}

# Add a two-factor autentication secret
function 2fa-add-secret {
    if [ "$#" -ne 3 ]; then
        echo "Usage: 2fa-add-secret serviceName secret recipient"
        return 1
    fi

    local serviceName="$1" secret="$2" recipient="$3"
    echo $secret | gpg2 --encrypt --recipient $recipient --output $HOME/.2fa/$serviceName
    echo "The encrypted 2fa secret was saved in $HOME/.2fa/$serviceName."
}

# Decrypt the 2fa secret, generate the code and copy it to the clipboard
function 2fa-code {
    if [ "$#" -ne 2 ]; then
        echo "Usage: 2fa-code serviceName recipient"
        return 1
    fi

    local serviceName="$1" recipient="$2"
    if [ -f $HOME/.2fa/$serviceName ]; then
        secret="$(gpg2 --quiet --decrypt $HOME/.2fa/$serviceName 2>/dev/null)"
        oathtool --base32 --totp $secret | xclip -sel c
        echo "The 2fa code was copied to the clipboard."
    else
        echo "No secret associated with service $serviceName."
    fi
}

# Make a directory and cd into it
function mdcd {
    if [ -d  "$1" ]; then
        echo "The directory $1 already exists."
        return 1
    fi

    mkdir "$1"
    cd "$1"
}
